/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JungleResource,
  JungleResourceInterface,
} from "../JungleResource";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "founder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d0a38038062000d0a83398101604081905262000034916200027b565b6040518060400160405280600e81526020016d4a756e676c655265736f7572636560901b815250604051806040016040528060038152602001622523a960e91b81525081600390805190602001906200008f929190620001d5565b508051620000a5906004906020840190620001d5565b505050620000cd620000bc620000ea60201b60201c565b6969e10de76676d0800000620000ee565b620000e3816969e10de76676d0800000620000ee565b506200034d565b3390565b6001600160a01b038216620001205760405162461bcd60e51b81526004016200011790620002ab565b60405180910390fd5b6200012e60008383620001d0565b8060026000828254620001429190620002eb565b90915550506001600160a01b0382166000908152602081905260408120805483929062000171908490620002eb565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001b6908590620002e2565b60405180910390a3620001cc60008383620001d0565b5050565b505050565b828054620001e39062000310565b90600052602060002090601f01602090048101928262000207576000855562000252565b82601f106200022257805160ff191683800117855562000252565b8280016001018555821562000252579182015b828111156200025257825182559160200191906001019062000235565b506200026092915062000264565b5090565b5b8082111562000260576000815560010162000265565b6000602082840312156200028d578081fd5b81516001600160a01b0381168114620002a4578182fd5b9392505050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200030b57634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200032557607f821691505b602082108114156200034757634e487b7160e01b600052602260045260246000fd5b50919050565b6109ad806200035d6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100dc57806323b872dd146100f1578063313ce56714610104578063395093511461011957806370a082311461012c57806395d89b411461013f578063a457c2d714610147578063a9059cbb1461015a578063dd62ed3e1461016d575b600080fd5b6100a6610180565b6040516100b391906106cd565b60405180910390f35b6100cf6100ca366004610699565b610212565b6040516100b391906106c2565b6100e461022f565b6040516100b39190610901565b6100cf6100ff36600461065e565b610235565b61010c6102ce565b6040516100b3919061090a565b6100cf610127366004610699565b6102d3565b6100e461013a36600461060b565b610327565b6100a6610346565b6100cf610155366004610699565b610355565b6100cf610168366004610699565b6103ce565b6100e461017b36600461062c565b6103e2565b60606003805461018f9061093c565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb9061093c565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b5050505050905090565b600061022661021f61040d565b8484610411565b50600192915050565b60025490565b60006102428484846104c5565b6001600160a01b03841660009081526001602052604081208161026361040d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102af5760405162461bcd60e51b81526004016102a6906107eb565b60405180910390fd5b6102c3856102bb61040d565b858403610411565b506001949350505050565b601290565b60006102266102e061040d565b8484600160006102ee61040d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103229190610918565b610411565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461018f9061093c565b6000806001600061036461040d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103b05760405162461bcd60e51b81526004016102a6906108bc565b6103c46103bb61040d565b85858403610411565b5060019392505050565b60006102266103db61040d565b84846104c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104375760405162461bcd60e51b81526004016102a690610878565b6001600160a01b03821661045d5760405162461bcd60e51b81526004016102a690610763565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104b8908590610901565b60405180910390a3505050565b6001600160a01b0383166104eb5760405162461bcd60e51b81526004016102a690610833565b6001600160a01b0382166105115760405162461bcd60e51b81526004016102a690610720565b61051c8383836105ef565b6001600160a01b038316600090815260208190526040902054818110156105555760405162461bcd60e51b81526004016102a6906107a5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061058c908490610918565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105d69190610901565b60405180910390a36105e98484846105ef565b50505050565b505050565b80356001600160a01b038116811461034157600080fd5b60006020828403121561061c578081fd5b610625826105f4565b9392505050565b6000806040838503121561063e578081fd5b610647836105f4565b9150610655602084016105f4565b90509250929050565b600080600060608486031215610672578081fd5b61067b846105f4565b9250610689602085016105f4565b9150604084013590509250925092565b600080604083850312156106ab578182fd5b6106b4836105f4565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106f9578581018301518582016040015282016106dd565b8181111561070a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561093757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061095057607f821691505b6020821081141561097157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f17db4d0512a267d750e98075e3946a377dbb7dcc6291c840ade766c8b2c852f64736f6c63430008000033";

export class JungleResource__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    founder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JungleResource> {
    return super.deploy(founder, overrides || {}) as Promise<JungleResource>;
  }
  getDeployTransaction(
    founder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(founder, overrides || {});
  }
  attach(address: string): JungleResource {
    return super.attach(address) as JungleResource;
  }
  connect(signer: Signer): JungleResource__factory {
    return super.connect(signer) as JungleResource__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JungleResourceInterface {
    return new utils.Interface(_abi) as JungleResourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JungleResource {
    return new Contract(address, _abi, signerOrProvider) as JungleResource;
  }
}
